<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MAUI on 时砂凝几页</title><link>http://lestua.eu.org/tags/maui/</link><description>Recent content in MAUI on 时砂凝几页</description><generator>Hugo -- gohugo.io</generator><language>zh</language><copyright> 2021-{year} yaleiyale</copyright><lastBuildDate>Wed, 08 Feb 2023 21:42:36 +0800</lastBuildDate><atom:link href="http://lestua.eu.org/tags/maui/index.xml" rel="self" type="application/rss+xml"/><item><title>MAUI-访问平台特性</title><link>http://lestua.eu.org/notes/2023/02/08/214243/</link><pubDate>Wed, 08 Feb 2023 21:42:36 +0800</pubDate><guid>http://lestua.eu.org/notes/2023/02/08/214243/</guid><description>跨平台API .NET MAUI 通过单个 API 提供 60 多个平台功能，例如：打开默认地图应用程序 将 IMap 注入到我们的 Monkey Details ViewModel 中： IMap map; public MonkeyDetailsViewModel(IMap map) { this.map = map; } 打开 MonkeyDetailsViewModel.cs 文件并添加一个名</description></item><item><title>MAUI-导航</title><link>http://lestua.eu.org/notes/2023/02/08/211301/</link><pubDate>Wed, 08 Feb 2023 21:12:49 +0800</pubDate><guid>http://lestua.eu.org/notes/2023/02/08/211301/</guid><description>导航时ViewModel的生成 使用QueryProperty特性来处理查询的数据传递以生成一个详情页所需的viewModel [QueryProperty(nameof(Monkey), &amp;#34;Monkey&amp;#34;)] public partial class MonkeyDetailsViewModel : BaseViewModel</description></item><item><title>MAUI-MVVM与数据绑定</title><link>http://lestua.eu.org/notes/2022/09/05/223237/</link><pubDate>Mon, 05 Sep 2022 22:28:08 +0800</pubDate><guid>http://lestua.eu.org/notes/2022/09/05/223237/</guid><description>感知数据变化 MVVM中一个重要的实践价值是视图能够感知数据的变化。手工的传统写法繁琐臃肿，NET Community Toolkit 通过源生成器来简化 MVVM，自动生成样本</description></item><item><title>MAUI-依赖注入</title><link>http://lestua.eu.org/notes/2022/09/05/223231/</link><pubDate>Mon, 05 Sep 2022 22:27:31 +0800</pubDate><guid>http://lestua.eu.org/notes/2022/09/05/223231/</guid><description>依赖注入使用 当某个角色需要另一个角色的协助时，在传统的程序设计过程中，通常由调用者来创建被调用者的实例。所谓依赖注入，是指程序运行过程中，如</description></item><item><title>MAUI跨平台基础认识</title><link>http://lestua.eu.org/notes/2022/08/29/223220/</link><pubDate>Mon, 29 Aug 2022 22:32:20 +0800</pubDate><guid>http://lestua.eu.org/notes/2022/08/29/223220/</guid><description>XXX.xaml：通常为布局代码 XXX.xaml.cs：通常为逻辑相关代码，被称为代码隐藏1 [!info] 结合MAUI提供的基础模板来了解MAUI基础样</description></item><item><title>MAUI-模型与视图</title><link>http://lestua.eu.org/notes/2022/08/29/223105/</link><pubDate>Mon, 29 Aug 2022 16:30:23 +0800</pubDate><guid>http://lestua.eu.org/notes/2022/08/29/223105/</guid><description>依照MAUI官方实验简述，该实验所实现的最终成果应用，名为MonkeyFinder。 在Model文件夹下创建一个Model，如 public class Monkey { public string Name</description></item><item><title>MAUI基本项目认识</title><link>http://lestua.eu.org/notes/2022/08/29/223215/</link><pubDate>Thu, 25 Aug 2022 22:44:00 +0800</pubDate><guid>http://lestua.eu.org/notes/2022/08/29/223215/</guid><description>项目经典架构 MVVM架构在移动客户端的设计中大行其道，MAUI也以此为经典架构。 项目文件为后缀为csproj。在VS的解决方案视图下显示为一</description></item></channel></rss>